// Generated by CoffeeScript 1.12.7
(function() {
  var AutoHide, BUTTON_HEIGHT_MAP, COLLASPE_ARROW, Dropdown, FONTSIZE_MAP, List, m, ref, s, u,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  m = require('mithril');

  s = require('mss-js');

  u = require('./utils');

  AutoHide = require('./AutoHide');

  List = require('./List');

  ref = require('./CONSTANT'), COLLASPE_ARROW = ref.COLLASPE_ARROW, BUTTON_HEIGHT_MAP = ref.BUTTON_HEIGHT_MAP, FONTSIZE_MAP = ref.FONTSIZE_MAP;

  Dropdown = (function() {
    function Dropdown(arg) {
      var i, ref1, ref10, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9;
      this.itemArray = (ref1 = arg.itemArray) != null ? ref1 : [], this.disabledArray = (ref2 = arg.disabledArray) != null ? ref2 : (function() {
        var j, len, ref3, results;
        ref3 = this.itemArray;
        results = [];
        for (j = 0, len = ref3.length; j < len; j++) {
          i = ref3[j];
          results.push(false);
        }
        return results;
      }).call(this), this.searchPlaceHolder = (ref3 = arg.searchPlaceHolder) != null ? ref3 : '', this.filter = (ref4 = arg.filter) != null ? ref4 : (function(item, search) {
        return item.indexOf(search) !== -1;
      }), this.currentIndex = (ref5 = arg.currentIndex) != null ? ref5 : -1, this.onSelect = (ref6 = arg.onSelect) != null ? ref6 : u.noOp, this.placeholder = (ref7 = arg.placeholder) != null ? ref7 : '请选择...', this.disabled = (ref8 = arg.disabled) != null ? ref8 : false, this.size = (ref9 = arg.size) != null ? ref9 : 'M', this.width = (ref10 = arg.width) != null ? ref10 : '400px';
      this.onShowListIntertal = bind(this.onShowListIntertal, this);
      this.onSelectInternal = bind(this.onSelectInternal, this);
      this.autoComplete = bind(this.autoComplete, this);
      this.initList();
    }

    Dropdown.prototype.initList = function() {
      return this.autoHideList = new AutoHide({
        onHide: (function(_this) {
          return function() {
            return _this.filter = '';
          };
        })(this),
        widget: new List({
          itemArray: this.itemArray,
          disabledArray: this.disabledArray,
          searchPlaceHolder: this.searchPlaceHolder,
          filter: this.filter,
          currentIndex: this.currentIndex,
          onSelect: this.onSelectInternal,
          size: this.size,
          width: this.width
        })
      });
    };

    Dropdown.prototype.autoComplete = function(e) {
      this.filter = (u.getTarget(e)).value;
      if (this.filter === '') {
        return this.currentIndex = void 0;
      }
    };

    Dropdown.prototype.onSelectInternal = function(i, e) {
      if (!this.disabled) {
        this.currentIndex = i;
        this.autoHideList.hide();
        this.onSelect(i, e);
        return u.cancelBubble(e);
      }
    };

    Dropdown.prototype.onShowListIntertal = function() {
      if (!this.disabled) {
        return this.autoHideList.show();
      }
    };

    Dropdown.prototype.view = function() {
      return m('.Dropdown', {
        style: {
          width: this.width
        },
        onclick: this.onShowListIntertal,
        className: [(this.autoHideList.showing ? 'Expanded' : ''), (this.disabled ? 'Disabled' : '')].join(' ')
      }, m('.DropdownContent', {
        style: {
          height: BUTTON_HEIGHT_MAP[this.size],
          lineHeight: BUTTON_HEIGHT_MAP[this.size],
          fontSize: FONTSIZE_MAP[this.size]
        },
        className: [(this.disabled ? 'Disabled' : ''), (this.currentIndex < 0 ? 'Note' : '')].join(' ')
      }, this.currentIndex >= 0 ? this.itemArray[this.currentIndex] : this.placeholder, m('.DownArrow', m.trust(COLLASPE_ARROW))), this.autoHideList.view());
    };

    return Dropdown;

  })();

  Dropdown.mss = {
    Dropdown: {
      DropdownContent: {
        position: 'relative',
        verticalAlign: 'middle',
        margin: 0,
        color: '#333',
        outline: 0,
        border: '1px solid #DADFE3',
        cursor: 'pointer',
        borderRadius: '4px',
        padding: '0 8px',
        verticalAlign: 'middle',
        $hover: {
          borderColor: '#2F88FF',
          DownArrow: {
            svg: {
              fill: '#2F88FF'
            }
          }
        }
      },
      Note: {
        color: '#C1C1C1'
      },
      DownArrow: {
        position: 'absolute',
        right: '12px',
        top: '50%',
        marginTop: '-4px',
        svg: {
          fill: '#666'
        }
      }
    },
    Expanded: {
      DropdownContent: {
        borderColor: '#2F88FF',
        boxShadow: '0 0 0 2px #2F88FF26'
      },
      DownArrow: {
        DownArrow: {
          svg: {
            fill: '#2F88FF'
          }
        }
      }
    },
    Disabled: {
      DropdownContent: {
        background: '#FCFCFC',
        cursor: 'not-allowed',
        color: '#D6D6D6'
      }
    }
  };

  module.exports = Dropdown;

}).call(this);
