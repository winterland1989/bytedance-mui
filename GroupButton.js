// Generated by CoffeeScript 1.12.7
(function() {
  var Button, ButtonGroup, doneIcon, m, s, style, u,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  m = require('mithril');

  s = require('mss-js');

  style = require('./style');

  u = require('./utils');

  Button = require('./Button');

  doneIcon = require('mmsvg/google/msvg/action/done');

  ButtonGroup = (function() {
    function ButtonGroup(arg) {
      var ref, ref1, ref2;
      this.textArray = arg.textArray, this.enabledIndexArray = (ref = arg.enabledIndexArray) != null ? ref : [], this.multiSelection = (ref1 = arg.multiSelection) != null ? ref1 : true, this.onChange = (ref2 = arg.onChange) != null ? ref2 : u.noOp;
      this.onClickInternal = bind(this.onClickInternal, this);
    }

    ButtonGroup.prototype.onClickInternal = function(e) {
      var i, i2;
      i = parseInt(u.getCurrentTargetData(e, 'index'));
      if (this.multiSelection) {
        i2 = this.enabledIndexArray.indexOf(i);
        if (i2 === -1) {
          this.enabledIndexArray.push(i);
        } else {
          this.enabledIndexArray.splice(i2, 1);
        }
      } else {
        this.enabledIndexArray = [i];
      }
      return this.onChange(this.enabledIndexArray);
    };

    ButtonGroup.prototype.view = function() {
      var i, t;
      return m('ul.ButtonGroup', (function() {
        var j, len, ref, results;
        ref = this.textArray;
        results = [];
        for (i = j = 0, len = ref.length; j < len; i = ++j) {
          t = ref[i];
          if (indexOf.call(this.enabledIndexArray, i) >= 0) {
            results.push(m('li.EnabledBtn', {
              'data-index': i,
              onclick: this.onClickInternal
            }, u.svg(doneIcon), m('span', t)));
          } else {
            results.push(m('li.DisabledBtn', {
              'data-index': i,
              onclick: this.onClickInternal
            }, t));
          }
        }
        return results;
      }).call(this));
    };

    return ButtonGroup;

  })();

  ButtonGroup.mss = {
    ButtonGroup: {
      margin: 0,
      padding: 0,
      EnabledBtn_DisabledBtn: s.LineSize('2em', '1em')({
        position: 'relative',
        display: 'inline-block',
        margin: 0,
        marginRight: '1em',
        width: '100px',
        textAlign: 'center',
        listStyle: 'none',
        outline: '1px solid ' + style.main[4],
        $hover: {
          cursor: 'pointer',
          background: style.main[5],
          outline: '1px solid ' + style.main[5],
          color: style.text[8]
        },
        svg: {
          left: '0.3em',
          top: '0.3em',
          position: 'absolute',
          fill: style.text[8],
          height: '1.4em',
          width: '1.4em'
        }
      }),
      EnabledBtn: {
        color: style.text[8],
        background: style.main[4]
      },
      DisabledBtn: {
        color: style.main[4],
        background: '#fff'
      }
    }
  };

  module.exports = ButtonGroup;

}).call(this);
