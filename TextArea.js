// Generated by CoffeeScript 1.12.7
(function() {
  var TextArea, m, s, u,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  m = require('mithril');

  s = require('mss-js');

  u = require('./utils');

  TextArea = (function() {
    function TextArea(arg) {
      var ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8;
      this.value = (ref = arg.value) != null ? ref : '', this.disabled = (ref1 = arg.disabled) != null ? ref1 : false, this.placeholder = (ref2 = arg.placeholder) != null ? ref2 : '', this.onChange = (ref3 = arg.onChange) != null ? ref3 : u.noOp, this.onKeydown = (ref4 = arg.onKeydown) != null ? ref4 : u.noOp, this.onKeyup = (ref5 = arg.onKeyup) != null ? ref5 : u.noOp, this.allowTab = (ref6 = arg.allowTab) != null ? ref6 : false, this.resize = (ref7 = arg.resize) != null ? ref7 : 'none', this.rows = (ref8 = arg.rows) != null ? ref8 : 5;
      this.onkeydownInternal = bind(this.onkeydownInternal, this);
      this.onkeyupInternal = bind(this.onkeyupInternal, this);
      this.onChangeInternal = bind(this.onChangeInternal, this);
      this.validationMsg = '';
    }

    TextArea.prototype.submit = function() {
      if (this.validationMsg === '') {
        return this.value;
      } else {
        return new Error(this.validationMsg);
      }
    };

    TextArea.prototype.validateInternal = function(c) {};

    TextArea.prototype.onChangeInternal = function(e) {
      var c, err;
      c = (u.getTarget(e)).value;
      err = this.onChange(c);
      this.validationMsg = '';
      if (err instanceof Error) {
        this.validationMsg = err.message;
      }
      return this.value = c;
    };

    TextArea.prototype.onkeyupInternal = function(e) {
      var c, err;
      c = (u.getTarget(e)).value;
      this.value = c;
      err = this.onKeyup(c);
      this.validationMsg = '';
      if (err instanceof Error) {
        return this.validationMsg = err.message;
      }
    };

    TextArea.prototype.onkeydownInternal = function(e) {
      var c, end, err, keyCode, start, target;
      c = (u.getTarget(e)).value;
      if (this.allowTab) {
        keyCode = e.keyCode || e.which;
        if (keyCode === 9) {
          e.preventDefault();
          target = u.getTarget(e);
          start = target.selectionStart;
          end = target.selectionEnd;
          this.value = c.substring(0, start) + '\t' + c.substring(end);
          target.selectionStart = target.selectionEnd = start + 1;
        }
      } else {
        this.value = c;
      }
      err = this.onKeydown(this.value);
      this.validationMsg = '';
      if (err instanceof Error) {
        return this.validationMsg = err.message;
      }
    };

    TextArea.prototype.view = function() {
      return m('.TextArea', m('textarea.Input', {
        disabled: this.disabled,
        onchange: this.onChangeInternal,
        onkeyup: this.onkeyupInternal,
        onkeydown: this.onkeydownInternal,
        value: this.value,
        placeholder: this.placeholder,
        rows: this.rows,
        style: {
          resize: this.resize
        }
      }), this.validationMsg !== '' ? m('.ValidationMsg', this.validationMsg) : void 0);
    };

    return TextArea;

  })();

  TextArea.mss = {
    TextArea: {
      position: 'relative',
      width: '400px',
      Input: {
        display: 'block',
        border: '1px solid ' + {}.border,
        fontSize: '1em',
        padding: '0 0.4em',
        WebkitAppearance: 'none',
        borderRadius: 0,
        width: '100%'
      },
      ValidationMsg: s.LineSize('1.93em', '1em')({
        background: {}.warn,
        color: {}.text,
        position: 'absolute',
        bottom: 0,
        left: 0,
        textAlign: 'center',
        zIndex: 99,
        width: '100%'
      })
    }
  };

  module.exports = TextArea;

}).call(this);
