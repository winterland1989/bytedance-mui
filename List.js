// Generated by CoffeeScript 1.12.7
(function() {
  var BUTTON_HEIGHT_MAP, BUTTON_WIDTH_MAP, FONTSIZE_MAP, LIST_MAX_HEIGHT_MAP, List, SEARCH_LIST_MAX_HEIGHT_MAP, TextInput, m, ref, s, u,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  m = require('mithril');

  s = require('mss-js');

  u = require('./utils');

  TextInput = require('./TextInput');

  ref = require('./CONSTANT'), BUTTON_WIDTH_MAP = ref.BUTTON_WIDTH_MAP, BUTTON_HEIGHT_MAP = ref.BUTTON_HEIGHT_MAP, FONTSIZE_MAP = ref.FONTSIZE_MAP, LIST_MAX_HEIGHT_MAP = ref.LIST_MAX_HEIGHT_MAP, SEARCH_LIST_MAX_HEIGHT_MAP = ref.SEARCH_LIST_MAX_HEIGHT_MAP;

  List = (function() {
    function List(arg) {
      var i, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8;
      this.itemArray = (ref1 = arg.itemArray) != null ? ref1 : [], this.disabledArray = (ref2 = arg.disabledArray) != null ? ref2 : (function() {
        var j, len, ref3, results;
        ref3 = this.itemArray;
        results = [];
        for (j = 0, len = ref3.length; j < len; j++) {
          i = ref3[j];
          results.push(false);
        }
        return results;
      }).call(this), this.searchPlaceHolder = (ref3 = arg.searchPlaceHolder) != null ? ref3 : '', this.filter = (ref4 = arg.filter) != null ? ref4 : (function(item, search) {
        return item.indexOf(search) !== -1;
      }), this.currentIndex = (ref5 = arg.currentIndex) != null ? ref5 : -1, this.onSelect = (ref6 = arg.onSelect) != null ? ref6 : u.noOp, this.size = (ref7 = arg.size) != null ? ref7 : 'M', this.width = (ref8 = arg.width) != null ? ref8 : '400px';
      this.onClickInternal = bind(this.onClickInternal, this);
      this.initSearchInput = bind(this.initSearchInput, this);
      this.initSearchInput();
    }

    List.prototype.initSearchInput = function() {
      if (this.searchPlaceHolder) {
        return this.searchInput = new TextInput({
          size: this.size,
          width: 'calc(100% - 24px)',
          placeholder: this.searchPlaceHolder
        });
      }
    };

    List.prototype.onClickInternal = function(e) {
      var i;
      i = parseInt(u.getCurrentTargetData(e, 'index'));
      this.currentIndex = i;
      return this.onSelect(i, e);
    };

    List.prototype.view = function() {
      var i, item;
      return m('ul.List', {
        style: {
          width: this.width,
          maxHeight: this.searchInput != null ? SEARCH_LIST_MAX_HEIGHT_MAP[this.size] : LIST_MAX_HEIGHT_MAP[this.size]
        }
      }, this.searchInput != null ? this.searchInput.view() : void 0, (function() {
        var j, len, ref1, results;
        ref1 = this.itemArray;
        results = [];
        for (i = j = 0, len = ref1.length; j < len; i = ++j) {
          item = ref1[i];
          if ((this.searchInput == null) || this.filter(item, this.searchInput.value)) {
            results.push(m('li.ListItem', {
              className: [(this.disabledArray[i] ? 'Disabled' : ''), (i === this.currentIndex ? 'Current' : '')].join(' '),
              style: {
                height: BUTTON_HEIGHT_MAP[this.size],
                lineHeight: BUTTON_HEIGHT_MAP[this.size],
                fontSize: FONTSIZE_MAP[this.size]
              },
              onclick: this.onClickInternal,
              'data-index': i
            }, item));
          } else {
            results.push(void 0);
          }
        }
        return results;
      }).call(this));
    };

    return List;

  })();

  List.mss = {
    List: {
      listStyle: 'none',
      padding: 0,
      boxShadow: '0 2px 6px 0 #00000014',
      borderRadius: '4px',
      overflow: 'auto',
      color: '#333',
      userSelect: 'none',
      ListItem: {
        padding: '0 12px',
        margin: 0,
        cursor: 'pointer',
        $hover: {
          background: '#EDF1F5'
        }
      },
      Disabled: {
        cursor: 'disabled'
      },
      Current: {
        color: '#2F88FF'
      },
      '.Disabled.Current': {
        color: '#A8D7FF'
      },
      $: TextInput.mss,
      TextInput: {
        margin: '12px 12px 6px'
      }
    }
  };

  module.exports = List;

}).call(this);
